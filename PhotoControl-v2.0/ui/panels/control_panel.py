#!/usr/bin/env python3
"""
PhotoControl v2.0 - –õ—ñ–≤–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è (–í–ò–ü–†–ê–í–õ–ï–ù–ê –í–ï–†–°–Ü–Ø)
–ü–æ–≤–Ω–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ñ–∞–π–ª–æ–≤–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π, –ø–∞–∫–µ—Ç–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏ —Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
"""

import os
from datetime import datetime
from typing import Optional, List, Callable
from PyQt5.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, QPushButton, 
                             QLabel, QFrame, QFileDialog, QMessageBox, QTextEdit,
                             QScrollArea, QComboBox, QDateEdit, QGroupBox)
from PyQt5.QtCore import Qt, pyqtSignal, QDate
from PyQt5.QtGui import QFont

# –ë–µ–∑–ø–µ—á–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏
try:
    from core.constants import UI, FILES
    print("‚úÖ Constants –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –≤ ControlPanel")
except ImportError:
    print("‚ö†Ô∏è Constants –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ fallback")
    class UI:
        CONTROL_PANEL_WIDTH = 250
    class FILES:
        SUPPORTED_IMAGE_FORMATS = ['.jpg', '.jpeg', '.png', '.bmp', '.gif', '.tiff']

try:
    from translations.translator import get_translator, TranslationKeys, Language
    print("‚úÖ Translator –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –≤ ControlPanel")
except ImportError:
    print("‚ö†Ô∏è Translator –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π")
    get_translator = None
    TranslationKeys = None
    Language = None


class ControlPanel(QWidget):
    """
    –í–ò–ü–†–ê–í–õ–ï–ù–ê –ª—ñ–≤–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è PhotoControl v2.0
    
    –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å:
    - –§–∞–π–ª–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó (–≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–æ–±—Ä–∞–∂–µ–Ω—å/–ø–∞–ø–æ–∫, –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è)
    - –ü–∞–∫–µ—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –∑–æ–±—Ä–∞–∂–µ–Ω—å
    - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —à–∞–±–ª–æ–Ω–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
    - –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—É
    - –û–±–ª–∞—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∑ –ø—Ä–æ–∫—Ä—É—Ç–∫–æ—é —Ç–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º
    - –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤ (—è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–∞)
    """
    
    # –°–∏–≥–Ω–∞–ª–∏ –¥–ª—è –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –≥–æ–ª–æ–≤–Ω–∏–º –≤—ñ–∫–Ω–æ–º
    open_image_requested = pyqtSignal()
    open_folder_requested = pyqtSignal()
    save_image_requested = pyqtSignal()
    create_album_requested = pyqtSignal()
    save_current_data_requested = pyqtSignal()
    template_created_requested = pyqtSignal()
    template_edited_requested = pyqtSignal()
    language_changed = pyqtSignal(str) # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ str –∑–∞–º—ñ—Å—Ç—å Language enum
    
    def __init__(self, parent=None):
        super().__init__(parent)
        
        print("üìã –°—Ç–≤–æ—Ä–µ–Ω–Ω—è ControlPanel...")
        
        # –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
        self.translator = get_translator() if get_translator else None
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ
        self.setFixedWidth(UI.CONTROL_PANEL_WIDTH)
        self.setStyleSheet(self._get_panel_styles())
        
        # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è UI
        self._create_ui()
        
        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤
        if self.translator:
            self.translator.language_changed.connect(self._update_translations)
        
        print("‚úÖ ControlPanel —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    
    def _create_ui(self):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –ø–∞–Ω–µ–ª—ñ"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª—ñ
        self._create_title(layout)
        
        # –§–∞–π–ª–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
        self._create_file_operations_section(layout)
        
        # –†–æ–∑–¥—ñ–ª—é–≤–∞—á
        layout.addWidget(self._create_separator())
        
        # –ü–∞–∫–µ—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞
        self._create_batch_processing_section(layout)
        
        # –†–æ–∑–¥—ñ–ª—é–≤–∞—á
        layout.addWidget(self._create_separator())
        
        # –¢–∏—Ç—É–ª—å–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —Ç–∞ —à–∞–±–ª–æ–Ω–∏
        self._create_title_page_section(layout)
        
        # –†–æ–∑–¥—ñ–ª—é–≤–∞—á
        layout.addWidget(self._create_separator())
        
        # –û–±–ª–∞—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        self._create_results_section(layout)
        
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–æ–≤–∏ (–≤ –Ω–∏–∂–Ω—ñ–π —á–∞—Å—Ç–∏–Ω—ñ)
        if Language:
            layout.addWidget(self._create_separator())
            self._create_language_section(layout)
        
        # –†–æ–∑—Ç—è–≥—É–≤–∞–Ω–Ω—è –∑–Ω–∏–∑—É
        layout.addStretch()
        
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        self.add_result("PhotoControl v2.0 –∑–∞–ø—É—â–µ–Ω–æ")
        self.add_result("–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥–æ—Ç–æ–≤–∞")
    
    def _create_title(self, layout: QVBoxLayout):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø–∞–Ω–µ–ª—ñ"""
        self.title_label = QLabel("–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è")
        self.title_label.setFont(QFont("Arial", 14, QFont.Bold))
        self.title_label.setAlignment(Qt.AlignCenter)
        self.title_label.setStyleSheet("""
            font-size: 14px; 
            font-weight: bold; 
            margin-bottom: 10px;
            color: #2c3e50;
        """)
        layout.addWidget(self.title_label)
    
    def _create_file_operations_section(self, layout: QVBoxLayout):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó —Ñ–∞–π–ª–æ–≤–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó
        self.file_ops_label = QLabel("–§–∞–π–ª–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó")
        self.file_ops_label.setFont(QFont("Arial", 10, QFont.Bold))
        self.file_ops_label.setStyleSheet("color: #666; margin-top: 10px; margin-bottom: 5px;")
        layout.addWidget(self.file_ops_label)
        
        # –ö–Ω–æ–ø–∫–∏ —Ñ–∞–π–ª–æ–≤–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π
        self.open_image_btn = QPushButton("–í—ñ–¥–∫—Ä–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        self.open_image_btn.setToolTip("–í—ñ–¥–∫—Ä–∏—Ç–∏ –æ–¥–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ (Ctrl+O)")
        self.open_image_btn.clicked.connect(self._on_open_image_clicked)
        layout.addWidget(self.open_image_btn)
        
        self.open_folder_btn = QPushButton("–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–∞–ø–∫—É")
        self.open_folder_btn.setToolTip("–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–∞–ø–∫—É –∑ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏ (Ctrl+Shift+O)")
        self.open_folder_btn.clicked.connect(self._on_open_folder_clicked)
        layout.addWidget(self.open_folder_btn)
        
        self.save_image_btn = QPushButton("–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        self.save_image_btn.setToolTip("–ó–±–µ—Ä–µ–≥—Ç–∏ –æ–±—Ä–æ–±–ª–µ–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (Ctrl+S)")
        self.save_image_btn.clicked.connect(self._on_save_image_clicked)
        self.save_image_btn.setEnabled(False)  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
        layout.addWidget(self.save_image_btn)
    
    def _create_batch_processing_section(self, layout: QVBoxLayout):
        """–ó–ê–í–ï–†–®–ï–ù–ò–ô –º–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó –ø–∞–∫–µ—Ç–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó
        self.batch_label = QLabel("–ü–∞–∫–µ—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞")
        self.batch_label.setFont(QFont("Arial", 10, QFont.Bold))
        self.batch_label.setStyleSheet("color: #666; margin-top: 10px; margin-bottom: 5px;")
        layout.addWidget(self.batch_label)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö
        self.save_current_btn = QPushButton("–ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        self.save_current_btn.setToolTip("–ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –∞–ª—å–±–æ–º—É (Ctrl+D)")
        self.save_current_btn.clicked.connect(self._on_save_current_data_clicked)
        self.save_current_btn.setEnabled(False)  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
        layout.addWidget(self.save_current_btn)
        
        # –ö–Ω–æ–ø–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É
        self.create_album_btn = QPushButton("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–ª—å–±–æ–º")
        self.create_album_btn.setToolTip("–°—Ç–≤–æ—Ä–∏—Ç–∏ Word –¥–æ–∫—É–º–µ–Ω—Ç –∑ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å (Ctrl+A)")
        self.create_album_btn.clicked.connect(self._on_create_album_clicked)
        self.create_album_btn.setEnabled(False)  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
        layout.addWidget(self.create_album_btn)
        
        # –õ—ñ—á–∏–ª—å–Ω–∏–∫ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å
        self.processed_count_label = QLabel("–û–±—Ä–æ–±–ª–µ–Ω–æ –∑–æ–±—Ä–∞–∂–µ–Ω—å: 0")
        self.processed_count_label.setStyleSheet("color: #666; font-size: 11px; margin-top: 5px;")
        layout.addWidget(self.processed_count_label)
    
    def _create_title_page_section(self, layout: QVBoxLayout):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó —Ç–∏—Ç—É–ª—å–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó
        self.title_page_label = QLabel("–¢–∏—Ç—É–ª—å–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞")
        self.title_page_label.setFont(QFont("Arial", 10, QFont.Bold))
        self.title_page_label.setStyleSheet("color: #666; margin-top: 10px; margin-bottom: 5px;")
        layout.addWidget(self.title_page_label)
        
        # –î–∞—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç—É
        date_layout = QHBoxLayout()
        self.date_label = QLabel("–î–∞—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç—É:")
        self.date_label.setStyleSheet("font-size: 11px;")
        date_layout.addWidget(self.date_label)
        
        self.date_edit = QDateEdit()
        self.date_edit.setDate(QDate.currentDate())
        self.date_edit.setDisplayFormat("dd.MM.yyyy")
        self.date_edit.setToolTip("–î–∞—Ç–∞ –¥–ª—è —Ç–∏—Ç—É–ª—å–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∞–ª—å–±–æ–º—É")
        self.date_edit.setStyleSheet("""
            QDateEdit {
                border: 1px solid #ced4da;
                border-radius: 4px;
                padding: 4px;
                font-size: 11px;
            }
        """)
        date_layout.addWidget(self.date_edit)
        
        layout.addLayout(date_layout)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —à–∞–±–ª–æ–Ω–∞–º–∏
        self.create_template_btn = QPushButton("–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —à–∞–±–ª–æ–Ω")
        self.create_template_btn.setToolTip("–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —à–∞–±–ª–æ–Ω —Ç–∏—Ç—É–ª—å–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏")
        self.create_template_btn.clicked.connect(self._on_create_template_clicked)
        layout.addWidget(self.create_template_btn)
        
        self.edit_template_btn = QPushButton("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —à–∞–±–ª–æ–Ω")
        self.edit_template_btn.setToolTip("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π —à–∞–±–ª–æ–Ω")
        self.edit_template_btn.clicked.connect(self._on_edit_template_clicked)
        layout.addWidget(self.edit_template_btn)
    
    def _create_results_section(self, layout: QVBoxLayout):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó
        self.results_label = QLabel("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏")
        self.results_label.setFont(QFont("Arial", 10, QFont.Bold))
        self.results_label.setStyleSheet("color: #666; margin-top: 10px; margin-bottom: 5px;")
        layout.addWidget(self.results_label)
        
        # –¢–µ–∫—Å—Ç–æ–≤–∞ –æ–±–ª–∞—Å—Ç—å –∑ –ø—Ä–æ–∫—Ä—É—Ç–∫–æ—é
        self.results_text = QTextEdit()
        self.results_text.setMaximumHeight(200)
        self.results_text.setReadOnly(True)
        self.results_text.setStyleSheet("""
            QTextEdit {
                background-color: #f8f9fa;
                border: 1px solid #dee2e6;
                border-radius: 4px;
                padding: 8px;
                font-family: 'Consolas', 'Monaco', monospace;
                font-size: 11px;
            }
        """)
        layout.addWidget(self.results_text)
        
        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        clear_results_layout = QHBoxLayout()
        self.clear_results_btn = QPushButton("–û—á–∏—Å—Ç–∏—Ç–∏")
        self.clear_results_btn.setMaximumWidth(80)
        self.clear_results_btn.setToolTip("–û—á–∏—Å—Ç–∏—Ç–∏ –æ–±–ª–∞—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
        self.clear_results_btn.clicked.connect(self._on_clear_results_clicked)
        clear_results_layout.addStretch()
        clear_results_layout.addWidget(self.clear_results_btn)
        
        layout.addLayout(clear_results_layout)
    
    def _create_language_section(self, layout: QVBoxLayout):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó –≤–∏–±–æ—Ä—É –º–æ–≤–∏"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó
        language_label = QLabel("–ú–æ–≤–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É")
        language_label.setFont(QFont("Arial", 10, QFont.Bold))
        language_label.setStyleSheet("color: #666; margin-top: 10px; margin-bottom: 5px;")
        layout.addWidget(language_label)
        
        # –ö–æ–º–±–æ–±–æ–∫—Å –≤–∏–±–æ—Ä—É –º–æ–≤–∏
        self.language_combo = QComboBox()
        self.language_combo.addItem("–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", "ukrainian")
        self.language_combo.addItem("English", "english")
        self.language_combo.setToolTip("–í–∏–±—ñ—Ä –º–æ–≤–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –ø—Ä–æ–≥—Ä–∞–º–∏")
        self.language_combo.currentIndexChanged.connect(self._on_language_changed)
        self.language_combo.setStyleSheet("""
            QComboBox {
                border: 1px solid #ced4da;
                border-radius: 4px;
                padding: 4px;
                font-size: 11px;
            }
        """)
        layout.addWidget(self.language_combo)
    
    def _create_separator(self) -> QFrame:
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑–¥—ñ–ª—é–≤–∞—á–∞"""
        separator = QFrame()
        separator.setFrameShape(QFrame.HLine)
        separator.setFrameShadow(QFrame.Sunken)
        separator.setStyleSheet("color: #dee2e6;")
        return separator
    
    def _get_panel_styles(self) -> str:
        """–°—Ç–∏–ª—ñ –¥–ª—è –ø–∞–Ω–µ–ª—ñ"""
        return """
            ControlPanel {
                background-color: #f8f9fa;
                border-right: 1px solid #dee2e6;
            }
            QPushButton {
                background-color: #ffffff;
                border: 1px solid #ced4da;
                border-radius: 4px;
                padding: 8px 12px;
                font-size: 12px;
                min-height: 20px;
                text-align: left;
            }
            QPushButton:hover {
                background-color: #e9ecef;
                border-color: #adb5bd;
            }
            QPushButton:pressed {
                background-color: #dee2e6;
            }
            QPushButton:disabled {
                background-color: #f8f9fa;
                color: #6c757d;
                border-color: #dee2e6;
            }
        """
    
    # ===============================
    # –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô –ö–ù–û–ü–û–ö
    # ===============================
    
    def _on_open_image_clicked(self):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"""
        self.add_result("üñºÔ∏è –ó–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        self.open_image_requested.emit()
    
    def _on_open_folder_clicked(self):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–∞–ø–∫–∏"""
        self.add_result("üìÅ –ó–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–∞–ø–∫–∏")
        self.open_folder_requested.emit()
    
    def _on_save_image_clicked(self):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"""
        self.add_result("üíæ –ó–∞–ø–∏—Ç –Ω–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        self.save_image_requested.emit()
    
    def _on_save_current_data_clicked(self):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö"""
        self.add_result("üìã –ó–∞–ø–∏—Ç –Ω–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        self.save_current_data_requested.emit()
    
    def _on_create_album_clicked(self):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É"""
        self.add_result("üìÑ –ó–∞–ø–∏—Ç –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É")
        self.create_album_requested.emit()
    
    def _on_create_template_clicked(self):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—É"""
        self.add_result("üìù –ó–∞–ø–∏—Ç –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω—É")
        self.template_created_requested.emit()
    
    def _on_edit_template_clicked(self):
        """–û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—É"""
        self.add_result("‚úèÔ∏è –ó–∞–ø–∏—Ç –Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—É")
        self.template_edited_requested.emit()
    
    def _on_clear_results_clicked(self):
        """–û—á–∏—â–µ–Ω–Ω—è –æ–±–ª–∞—Å—Ç—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤"""
        self.results_text.clear()
        self.add_result("üóëÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –æ—á–∏—â–µ–Ω–æ")
    
    def _on_language_changed(self, index: int):
        """–û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ –º–æ–≤–∏"""
        language_code = self.language_combo.itemData(index)
        if language_code:
            self.add_result(f"üåê –ú–æ–≤–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞: {language_code}")
            self.language_changed.emit(language_code)
    
    # ===============================
    # –ü–£–ë–õ–Ü–ß–ù–Ü –ú–ï–¢–û–î–ò
    # ===============================
    
    def add_result(self, message: str):
        """
        –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–æ –æ–±–ª–∞—Å—Ç—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é
        
        Args:
            message: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
        """
        if hasattr(self, 'results_text'):
            timestamp = datetime.now().strftime("%H:%M:%S")
            formatted_message = f"[{timestamp}] {message}"
            
            self.results_text.append(formatted_message)
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è –≤–Ω–∏–∑
            scrollbar = self.results_text.verticalScrollBar()
            scrollbar.setValue(scrollbar.maximum())
            
            print(f"üìã ControlPanel: {message}")
    
    def set_buttons_enabled(self, save_image=None, save_data=None, create_album=None):
        """
        –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è/–≤–∏–º–∫–Ω–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞–Ω—É –ø—Ä–æ–≥—Ä–∞–º–∏
        
        Args:
            save_image: –°—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
            save_data: –°—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
            create_album: –°—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É
        """
        if save_image is not None:
            self.save_image_btn.setEnabled(save_image)
        
        if save_data is not None:
            self.save_current_btn.setEnabled(save_data)
        
        if create_album is not None:
            self.create_album_btn.setEnabled(create_album)
    
    def update_processed_count(self, count: int):
        """
        –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å
        
        Args:
            count: –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å
        """
        if hasattr(self, 'processed_count_label'):
            self.processed_count_label.setText(f"–û–±—Ä–æ–±–ª–µ–Ω–æ –∑–æ–±—Ä–∞–∂–µ–Ω—å: {count}")
        
        # –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –∫–Ω–æ–ø–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É —è–∫—â–æ —î –æ–±—Ä–æ–±–ª–µ–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        if hasattr(self, 'create_album_btn'):
            self.create_album_btn.setEnabled(count > 0)
    
    def get_document_date(self) -> str:
        """
        –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–±—Ä–∞–Ω–æ—ó –¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—É
        
        Returns:
            –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ dd.MM.yyyy
        """
        if hasattr(self, 'date_edit'):
            return self.date_edit.date().toString("dd.MM.yyyy")
        return datetime.now().strftime("%d.%m.%Y")
    
    def set_document_date(self, date_str: str):
        """
        –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—É
        
        Args:
            date_str: –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç—ñ dd.MM.yyyy
        """
        if hasattr(self, 'date_edit'):
            try:
                date = QDate.fromString(date_str, "dd.MM.yyyy")
                if date.isValid():
                    self.date_edit.setDate(date)
                    self.add_result(f"üìÖ –î–∞—Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {date_str}")
            except Exception as e:
                self.add_result(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞—Ç–∏: {e}")
    
    def get_current_language(self) -> str:
        """
        –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–≤–∏
        
        Returns:
            –ö–æ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó –º–æ–≤–∏
        """
        if hasattr(self, 'language_combo'):
            return self.language_combo.currentData() or "ukrainian"
        return "ukrainian"
    
    def set_language(self, language_code: str):
        """
        –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–æ–≤–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
        
        Args:
            language_code: –ö–æ–¥ –º–æ–≤–∏ (ukrainian, english)
        """
        if hasattr(self, 'language_combo'):
            for i in range(self.language_combo.count()):
                if self.language_combo.itemData(i) == language_code:
                    self.language_combo.setCurrentIndex(i)
                    break
    
    # ===============================
    # –°–ò–°–¢–ï–ú–ê –ü–ï–†–ï–ö–õ–ê–î–Ü–í
    # ===============================
    
    def _update_translations(self):
        """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É"""
        if not self.translator:
            return
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤—ñ –ø–µ—Ä–µ–∫–ª–∞–¥–∏ —è–∫—â–æ TranslationKeys –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π
        tr = self.translator.tr if hasattr(self.translator, 'tr') else lambda x: x
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        if hasattr(self, 'title_label'):
            self.title_label.setText("–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è")
        
        if hasattr(self, 'file_ops_label'):
            self.file_ops_label.setText("–§–∞–π–ª–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó")
        
        if hasattr(self, 'batch_label'):
            self.batch_label.setText("–ü–∞–∫–µ—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞")
        
        if hasattr(self, 'title_page_label'):
            self.title_page_label.setText("–¢–∏—Ç—É–ª—å–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞")
        
        if hasattr(self, 'results_label'):
            self.results_label.setText("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏")
        
        # –ö–Ω–æ–ø–∫–∏
        if hasattr(self, 'open_image_btn'):
            self.open_image_btn.setText("–í—ñ–¥–∫—Ä–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        
        if hasattr(self, 'open_folder_btn'):
            self.open_folder_btn.setText("–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–∞–ø–∫—É")
        
        if hasattr(self, 'save_image_btn'):
            self.save_image_btn.setText("–ó–±–µ—Ä–µ–≥—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        
        if hasattr(self, 'save_current_btn'):
            self.save_current_btn.setText("–ó–±–µ—Ä–µ–≥—Ç–∏ –¥–∞–Ω—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
        
        if hasattr(self, 'create_album_btn'):
            self.create_album_btn.setText("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∞–ª—å–±–æ–º")
        
        # –®–∞–±–ª–æ–Ω–∏
        if hasattr(self, 'create_template_btn'):
            self.create_template_btn.setText("–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —à–∞–±–ª–æ–Ω")
        
        if hasattr(self, 'edit_template_btn'):
            self.edit_template_btn.setText("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —à–∞–±–ª–æ–Ω")
        
        # –î–∞—Ç–∞
        if hasattr(self, 'date_label'):
            self.date_label.setText("–î–∞—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç—É:")
        
        self.add_result("üåê –ü–µ—Ä–µ–∫–ª–∞–¥–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ")
    
    # ===============================
    # –°–¢–ê–¢–ò–ß–ù–Ü –ú–ï–¢–û–î–ò –î–õ–Ø –¢–ï–°–¢–£–í–ê–ù–ù–Ø
    # ===============================
    
    @staticmethod
    def create_test_panel() -> "ControlPanel":
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ—ó –ø–∞–Ω–µ–ª—ñ –∑ –¥–µ–º–æ-–¥–∞–Ω–∏–º–∏"""
        panel = ControlPanel()
        
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
        panel.add_result("üß™ –¢–µ—Å—Ç–æ–≤–∞ –ø–∞–Ω–µ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–∞")
        panel.add_result("üìã –í—Å—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –≥–æ—Ç–æ–≤—ñ")
        panel.add_result("‚úÖ –ì–æ—Ç–æ–≤–∞ –¥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è")
        
        # –ê–∫—Ç–∏–≤–∞—Ü—ñ—è –¥–µ—è–∫–∏—Ö –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
        panel.set_buttons_enabled(save_image=True, save_data=True)
        panel.update_processed_count(3)
        
        return panel


# ===============================
# –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ü–ê–ù–ï–õ–Ü
# ===============================

if __name__ == "__main__":
    import sys
    from PyQt5.QtWidgets import QApplication, QMainWindow, QHBoxLayout, QWidget, QLabel
    
    class TestMainWindow(QMainWindow):
        def __init__(self):
            super().__init__()
            self.setWindowTitle("–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è ControlPanel v2.0")
            self.setGeometry(100, 100, 900, 600)
            
            # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π –≤—ñ–¥–∂–µ—Ç
            central_widget = QWidget()
            self.setCentralWidget(central_widget)
            layout = QHBoxLayout(central_widget)
            
            # –õ—ñ–≤–∞ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
            self.control_panel = ControlPanel.create_test_panel()
            layout.addWidget(self.control_panel)
            
            # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å (–∑–∞–≥–ª—É—à–∫–∞)
            center_label = QLabel("–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å\n\n(—Ç—É—Ç –±—É–¥–µ –ø–∞–Ω–µ–ª—å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è)\n\n–¢–µ—Å—Ç—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –ª—ñ–≤—ñ–π –ø–∞–Ω–µ–ª—ñ!")
            center_label.setAlignment(Qt.AlignCenter)
            center_label.setStyleSheet("""
                background-color: white; 
                border: 1px solid #ddd;
                color: #666;
                font-size: 14px;
                border-radius: 8px;
                margin: 10px;
            """)
            layout.addWidget(center_label)
            
            # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Å–∏–≥–Ω–∞–ª—ñ–≤ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
            self.control_panel.open_image_requested.connect(
                lambda: self.control_panel.add_result("‚úÖ –°–∏–≥–Ω–∞–ª: –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
            )
            self.control_panel.open_folder_requested.connect(
                lambda: self.control_panel.add_result("‚úÖ –°–∏–≥–Ω–∞–ª: –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–∞–ø–∫–∏")
            )
            self.control_panel.save_image_requested.connect(
                lambda: self.control_panel.add_result("‚úÖ –°–∏–≥–Ω–∞–ª: –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è")
            )
            self.control_panel.create_album_requested.connect(
                lambda: self.control_panel.add_result("‚úÖ –°–∏–≥–Ω–∞–ª: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–ª—å–±–æ–º—É")
            )
            self.control_panel.save_current_data_requested.connect(
                lambda: self.control_panel.add_result("‚úÖ –°–∏–≥–Ω–∞–ª: –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö")
            )
            self.control_panel.template_created_requested.connect(
                lambda: self.control_panel.add_result("‚úÖ –°–∏–≥–Ω–∞–ª: —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—É")
            )
            self.control_panel.template_edited_requested.connect(
                lambda: self.control_panel.add_result("‚úÖ –°–∏–≥–Ω–∞–ª: —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—É")
            )
            self.control_panel.language_changed.connect(
                lambda lang: self.control_panel.add_result(f"‚úÖ –°–∏–≥–Ω–∞–ª: –º–æ–≤–∞ –∑–º—ñ–Ω–µ–Ω–∞ –Ω–∞ {lang}")
            )
            
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–µ –≤—ñ–∫–Ω–æ ControlPanel —Å—Ç–≤–æ—Ä–µ–Ω–æ")
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É
    app = QApplication(sys.argv)
    app.setApplicationName("ControlPanel Test")
    
    window = TestMainWindow()
    window.show()
    
    print("\n" + "=" * 60)
    print("üß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø CONTROLPANEL")
    print("=" * 60)
    print("\nüìã –©–æ —Ç–µ—Å—Ç—É–≤–∞—Ç–∏:")
    print("1. üñºÔ∏è –ö–Ω–æ–ø–∫–∏ —Ñ–∞–π–ª–æ–≤–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π")
    print("2. üìã –ö–Ω–æ–ø–∫–∏ –ø–∞–∫–µ—Ç–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏")
    print("3. üìÖ –í–∏–±—ñ—Ä –¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—É")
    print("4. üìù –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —à–∞–±–ª–æ–Ω–∞–º–∏")
    print("5. üåê –ó–º—ñ–Ω–∞ –º–æ–≤–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É")
    print("6. üóëÔ∏è –ö–Ω–æ–ø–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
    print("7. üìä –û–±–ª–∞—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º")
    print("\n‚úÖ –í—Å—ñ –∫–Ω–æ–ø–∫–∏ –ø–æ–≤–∏–Ω–Ω—ñ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –æ–±–ª–∞—Å—Ç—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
    print("üîó –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —â–æ –≤—Å—ñ —Å–∏–≥–Ω–∞–ª–∏ –ø—Ä–∞—Ü—é—é—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–æ")
    print("\n" + "=" * 60)
    
    sys.exit(app.exec_())